import 'package:app_prodem_v1/core/api/api.dart';
import 'package:app_prodem_v1/core/networking/http_services.dart';
import '../../domain/entities/entity.dart';
import '../models/model.dart';

class SintesisPaymentProcessDatasource {
  final ApiClient _apiClient;
  SintesisPaymentProcessDatasource(this._apiClient);

  Future<SintesisPaymentProcessResponseEntity> sintesisPaymentProcess(
    String idUser,
    String idOffice,
    String idCustomer,
    String idWebClient,
    String invoiceNIT,
    String invoiceName,
    String invoiceCustomerEmail,
    String invoiceDocumentType,
    String invoiceDocumentComplement,
    String invoicePhone,
    String idExternalSystem,
    String searchData,
    String idMoney,
    String mFServiceCode,
    String externalSystemPaymentID,
    String totalToPay,
    bool isMobile,
    String idSavingAccount,
    String numberTranCAI,
    String serieCAI,
    bool createInvoicingPendding,
    String codeAuthentication,
    String externalModule,
    String savingAccountOperation,
    String useCode,
    String location,
    String deviceIMEI,
    String operationNumber,
    String operativeDate,
    String accountCode,
    String serviceCode,
    String collectionType,
    String carDepartment,
    String carType,
    String carUseType,
    String userToken,
    String codeSintesisModule,
    String codesavingAccount,
    String codeMoney,
    String userID,
    String iMEI,
    String iPAddress,
    String itemNumberCode,
    String itemAmount,
    String batchDosage,
    String rentNumber,
    String itemPeriod,
    String itemDescription,
    String itemDate,
    String? vToken,
    String? idSMSOperation,
    String? prodemKeyCode,
  ) async {
    final response = await _apiClient.post(
      AppStrings.sintesisPaymentProcess,
      operationName: 'final service to pay for services',
      data: {
        "IdUser": idUser,
        "IdOffice": idOffice,
        "IdCustomer": idCustomer,
        "IdWebClient": idWebClient,
        "InvoiceNIT": invoiceNIT,
        "InvoiceName": invoiceName,
        "InvoiceCustomerEmail": invoiceCustomerEmail,
        "InvoiceDocumentType": invoiceDocumentType,
        "InvoiceDocumentComplement": invoiceDocumentComplement,
        "InvoicePhone": invoicePhone,
        "IdExternalSystem": idExternalSystem,
        "SearchData": searchData,
        "IdMoney": idMoney,
        "MFServiceCode": mFServiceCode,
        "ExternalSystemPaymentID": externalSystemPaymentID,
        "TotalToPay": totalToPay,
        "IsMobile": isMobile,
        "IdSavingAccount": idSavingAccount,
        "NumberTranCAI": numberTranCAI,
        "SerieCAI": serieCAI,
        "CreateInvoicingPendding": createInvoicingPendding,
        "CodeAuthentication": codeAuthentication,
        "ExternalModule": externalModule,
        "SavingAccountOperation": savingAccountOperation,
        "UseCode": useCode,
        "Location": location,
        "DeviceIMEI": deviceIMEI,
        "OperationNumber": operationNumber,
        "OperativeDate": operativeDate,
        "AccountCode": accountCode,
        "ServiceCode": serviceCode,
        "CollectionType": collectionType,
        "CarDepartment": carDepartment,
        "CarType": carType,
        "CarUseType": carUseType,
        "UserToken": userToken,
        "CodeSintesisModule": codeSintesisModule,
        "objWebMobileData": {
          "CodesavingAccount": codesavingAccount,
          "CodeMoney": codeMoney,
          "UserID": userID,
          "IMEI": iMEI,
          "IPAddress": iPAddress,
          "Location": location,
        },
        /*"objWebMobileData": {
          "CodesavingAccount": codesavingAccount,
          "CodeMoney": codeMoney,
          "UserID": userID,
          "IMEI": iMEI,
          "IPAddress": iPAddress,
          "Location": location,
        },*/
        "ColPaymentDetail": [
          {
            "ItemNumberCode": itemNumberCode,
            "ItemAmount": itemAmount,
            "BatchDosage": batchDosage,
            "RentNumber": rentNumber,
            "ItemPeriod": itemPeriod,
            "ItemDescription": itemDescription,
            "ItemDate": itemDate,
          },
        ],
      },
      headers: {
        'Authorization': 'Bearer $vToken',
        'CodeOperation':
            "{'IdSMSOperation': $idSMSOperation,'ProdemKeyCode': '$prodemKeyCode'}",
        'Content-Type': 'application/json',
      },
    );

    return SintesisPaymentProcessResponseModel.fromJson(response);
  }
}
